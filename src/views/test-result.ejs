<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/images/favicon.svg">
    <link rel="alternate icon" type="image/x-icon" href="/images/favicon.ico">
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&family=Space+Grotesk:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <style>
        * { scroll-behavior: smooth; }
        body { font-family: 'Inter', sans-serif; background: #0f172a; }
        h1, h2, h3, h4, h5, h6 { font-family: 'Space Grotesk', sans-serif; }
        
        .glass {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .gradient-text {
            background: linear-gradient(135deg, #60a5fa 0%, #a78bfa 50%, #f472b6 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
    </style>
</head>
<body class="text-white">
    <div class="min-h-screen py-12 px-4">
        <div class="container mx-auto max-w-7xl">
            <!-- Header -->
            <div class="text-center mb-12">
                <a href="/student-corner/tests" class="inline-flex items-center text-blue-400 hover:text-blue-300 mb-6">
                    <i class="fas fa-arrow-left mr-2"></i> Back to Tests
                </a>
                <h1 class="text-4xl md:text-5xl font-black mb-4">
                    Test <span class="gradient-text">Results</span>
                </h1>
                <p class="text-gray-400 text-lg"><%= test.title %> - <%= test.subject %></p>
            </div>

            <!-- Score Card -->
            <div class="glass rounded-3xl p-8 mb-8">
                <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
                    <!-- Score -->
                    <div class="text-center">
                        <div class="text-6xl font-black mb-2">
                            <span class="<%= result.score >= 75 ? 'text-green-400' : result.score >= 50 ? 'text-yellow-400' : 'text-red-400' %>">
                                <%= result.score.toFixed(1) %>%
                            </span>
                        </div>
                        <p class="text-gray-400">Your Score</p>
                    </div>
                    
                    <!-- Rank -->
                    <div class="text-center">
                        <div class="text-6xl font-black mb-2 text-blue-400">
                            #<%= rank %>
                        </div>
                        <p class="text-gray-400">Your Rank</p>
                        <p class="text-sm text-gray-500">out of <%= totalStudents %> students</p>
                    </div>
                    
                    <!-- Correct Answers -->
                    <div class="text-center">
                        <div class="text-6xl font-black mb-2 text-green-400">
                            <%= result.correct_answers %>
                        </div>
                        <p class="text-gray-400">Correct</p>
                        <p class="text-sm text-gray-500">out of <%= result.total_questions %></p>
                    </div>
                    
                    <!-- Time Taken -->
                    <div class="text-center">
                        <div class="text-6xl font-black mb-2 text-purple-400">
                            <%= Math.floor(result.time_taken / 60) %>m
                        </div>
                        <p class="text-gray-400">Time Taken</p>
                        <p class="text-sm text-gray-500"><%= result.time_taken % 60 %>s</p>
                    </div>
                </div>
            </div>

            <!-- Performance Analysis -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                <!-- Score Distribution Chart -->
                <div class="glass rounded-2xl p-6">
                    <h3 class="text-xl font-bold mb-4">Score Distribution</h3>
                    <canvas id="scoreChart"></canvas>
                </div>
                
                <!-- Performance Metrics -->
                <div class="glass rounded-2xl p-6">
                    <h3 class="text-xl font-bold mb-4">Performance Metrics</h3>
                    <div class="space-y-4">
                        <div>
                            <div class="flex justify-between mb-2">
                                <span class="text-gray-400">Accuracy</span>
                                <span class="font-bold"><%= ((result.correct_answers / result.total_questions) * 100).toFixed(1) %>%</span>
                            </div>
                            <div class="w-full bg-gray-700 rounded-full h-3">
                                <div class="bg-green-500 h-3 rounded-full" style="width: <%= (result.correct_answers / result.total_questions) * 100 %>%"></div>
                            </div>
                        </div>
                        
                        <div>
                            <div class="flex justify-between mb-2">
                                <span class="text-gray-400">Speed</span>
                                <span class="font-bold"><%= (result.time_taken / result.total_questions).toFixed(1) %>s/question</span>
                            </div>
                            <div class="w-full bg-gray-700 rounded-full h-3">
                                <div class="bg-blue-500 h-3 rounded-full" style="width: <%= Math.min((60 / (result.time_taken / result.total_questions)) * 100, 100) %>%"></div>
                            </div>
                        </div>
                        
                        <div>
                            <div class="flex justify-between mb-2">
                                <span class="text-gray-400">Percentile</span>
                                <span class="font-bold"><%= (((totalStudents - rank + 1) / totalStudents) * 100).toFixed(1) %>%</span>
                            </div>
                            <div class="w-full bg-gray-700 rounded-full h-3">
                                <div class="bg-purple-500 h-3 rounded-full" style="width: <%= ((totalStudents - rank + 1) / totalStudents) * 100 %>%"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Question-wise Analysis -->
            <div class="glass rounded-2xl p-6">
                <h3 class="text-2xl font-bold mb-6">Question-wise Analysis</h3>
                
                <div class="space-y-6">
                    <% test.questions.forEach((question, index) => { 
                        const userAnswer = answers[index];
                        const correctOption = question.options.find(opt => opt.is_correct);
                        const correctIndex = question.options.indexOf(correctOption);
                        const isCorrect = userAnswer === correctIndex;
                    %>
                        <div class="bg-white/5 rounded-xl p-6 border-l-4 <%= isCorrect ? 'border-green-500' : 'border-red-500' %>">
                            <div class="flex items-start justify-between mb-4">
                                <div class="flex-1">
                                    <div class="flex items-center gap-3 mb-2">
                                        <span class="text-sm font-bold text-gray-400">Question <%= index + 1 %></span>
                                        <% if (isCorrect) { %>
                                            <span class="px-3 py-1 bg-green-500/20 text-green-400 rounded-full text-xs font-bold">
                                                <i class="fas fa-check mr-1"></i> Correct
                                            </span>
                                        <% } else { %>
                                            <span class="px-3 py-1 bg-red-500/20 text-red-400 rounded-full text-xs font-bold">
                                                <i class="fas fa-times mr-1"></i> Incorrect
                                            </span>
                                        <% } %>
                                    </div>
                                    <p class="text-lg mb-4"><%= question.question_text %></p>
                                    
                                    <% if (question.diagram) { %>
                                        <div class="mb-4">
                                            <img src="<%= question.diagram %>" alt="Question Diagram" class="max-w-md rounded-lg border border-white/10">
                                        </div>
                                    <% } %>
                                    
                                    <div class="space-y-2">
                                        <% question.options.forEach((option, optIndex) => { %>
                                            <div class="flex items-center gap-3 p-3 rounded-lg <%= 
                                                optIndex === correctIndex ? 'bg-green-500/20 border border-green-500/50' : 
                                                optIndex === userAnswer && !isCorrect ? 'bg-red-500/20 border border-red-500/50' : 
                                                'bg-white/5' 
                                            %>">
                                                <div class="w-8 h-8 rounded-full <%= 
                                                    optIndex === correctIndex ? 'bg-green-500' : 
                                                    optIndex === userAnswer && !isCorrect ? 'bg-red-500' : 
                                                    'bg-gray-600' 
                                                %> flex items-center justify-center font-bold text-sm">
                                                    <%= String.fromCharCode(65 + optIndex) %>
                                                </div>
                                                <div class="flex-1"><%= option.option_text %></div>
                                                <% if (optIndex === correctIndex) { %>
                                                    <i class="fas fa-check-circle text-green-400"></i>
                                                <% } else if (optIndex === userAnswer && !isCorrect) { %>
                                                    <i class="fas fa-times-circle text-red-400"></i>
                                                <% } %>
                                            </div>
                                        <% }); %>
                                    </div>
                                    
                                    <% if (question.explanation) { %>
                                        <div class="mt-4 p-4 bg-blue-500/10 border border-blue-500/30 rounded-lg">
                                            <p class="text-sm text-blue-300">
                                                <i class="fas fa-lightbulb mr-2"></i>
                                                <strong>Explanation:</strong> <%= question.explanation %>
                                            </p>
                                        </div>
                                    <% } %>
                                    
                                    <!-- AI Solution Button -->
                                    <div class="mt-4">
                                        <button 
                                            class="ai-solution-btn px-4 py-2 bg-gradient-to-r from-purple-600 to-pink-600 rounded-lg font-bold hover:scale-105 transition-all"
                                            data-question-index="<%= index %>"
                                            data-question-text="<%= question.question_text.replace(/"/g, '&quot;') %>"
                                            data-options='<%- JSON.stringify(question.options.map(o => o.option_text)) %>'
                                            data-correct-answer="<%= correctIndex %>"
                                            data-user-answer="<%= userAnswer %>">
                                            <i class="fas fa-robot mr-2"></i> Get AI Detailed Solution
                                        </button>
                                        
                                        <!-- AI Solution Container -->
                                        <div id="ai-solution-<%= index %>" class="hidden mt-4 p-4 bg-purple-500/10 border border-purple-500/30 rounded-lg">
                                            <div class="flex items-start gap-3">
                                                <i class="fas fa-robot text-purple-400 text-xl mt-1"></i>
                                                <div class="flex-1">
                                                    <h4 class="font-bold text-purple-300 mb-2">AI-Generated Detailed Solution</h4>
                                                    <div class="ai-solution-content text-sm text-gray-300 whitespace-pre-wrap"></div>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <!-- Loading State -->
                                        <div id="ai-loading-<%= index %>" class="hidden mt-4 p-4 bg-purple-500/10 border border-purple-500/30 rounded-lg">
                                            <div class="flex items-center gap-3">
                                                <div class="animate-spin rounded-full h-5 w-5 border-b-2 border-purple-400"></div>
                                                <p class="text-sm text-purple-300">AI is generating detailed solution...</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="flex justify-center gap-4 mt-8">
                <a href="/student-corner/tests" class="px-8 py-4 bg-gradient-to-r from-blue-600 to-purple-600 rounded-xl font-bold hover:scale-105 transition-all">
                    <i class="fas fa-list mr-2"></i> Back to Tests
                </a>
                <button onclick="window.print()" class="px-8 py-4 bg-gray-700 rounded-xl font-bold hover:bg-gray-600 transition-all">
                    <i class="fas fa-print mr-2"></i> Print Result
                </button>
            </div>
        </div>
    </div>

    <script>
        // Score Distribution Chart
        const ctx = document.getElementById('scoreChart').getContext('2d');
        
        // Calculate answered count
        const answersData = <%- JSON.stringify(answers) %>;
        const answeredCount = Object.keys(answersData).filter(k => answersData[k] !== null).length;
        const incorrectCount = answeredCount - <%= result.correct_answers %>;
        const unattemptedCount = <%= result.total_questions %> - answeredCount;
        
        new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['Correct', 'Incorrect', 'Unattempted'],
                datasets: [{
                    data: [<%= result.correct_answers %>, incorrectCount, unattemptedCount],
                    backgroundColor: ['#22c55e', '#ef4444', '#6b7280'],
                    borderWidth: 0
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            color: '#9ca3af',
                            padding: 15,
                            font: { size: 12 }
                        }
                    }
                }
            }
        });
        
        // AI Solution Handler
        document.querySelectorAll('.ai-solution-btn').forEach(btn => {
            btn.addEventListener('click', async function() {
                const questionIndex = this.dataset.questionIndex;
                const questionText = this.dataset.questionText;
                const options = JSON.parse(this.dataset.options);
                const correctAnswer = parseInt(this.dataset.correctAnswer);
                const userAnswer = this.dataset.userAnswer === 'null' ? null : parseInt(this.dataset.userAnswer);
                
                const solutionDiv = document.getElementById(`ai-solution-${questionIndex}`);
                const loadingDiv = document.getElementById(`ai-loading-${questionIndex}`);
                
                // Check if solution already loaded
                if (!solutionDiv.classList.contains('hidden')) {
                    solutionDiv.classList.add('hidden');
                    this.innerHTML = '<i class="fas fa-robot mr-2"></i> Get AI Detailed Solution';
                    return;
                }
                
                // Show loading
                loadingDiv.classList.remove('hidden');
                this.disabled = true;
                
                try {
                    const response = await fetch('/student-corner/ai-solution', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            questionText: questionText,
                            options: options,
                            correctAnswer: correctAnswer,
                            userAnswer: userAnswer
                        })
                    });
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        // Display solution
                        const contentDiv = solutionDiv.querySelector('.ai-solution-content');
                        contentDiv.textContent = data.solution;
                        
                        loadingDiv.classList.add('hidden');
                        solutionDiv.classList.remove('hidden');
                        
                        this.innerHTML = '<i class="fas fa-eye-slash mr-2"></i> Hide AI Solution';
                        this.disabled = false;
                    } else {
                        throw new Error('Failed to get solution');
                    }
                } catch (error) {
                    console.error('Error getting AI solution:', error);
                    loadingDiv.classList.add('hidden');
                    alert('Failed to generate AI solution. Please try again.');
                    this.disabled = false;
                }
            });
        });
    </script>
</body>
</html>
